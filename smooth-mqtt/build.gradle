buildscript {
    ext {
        kotlinVersion = '1.3.41'
        rxKotlinVersion = '2.3.0'
        rxJavaVersion = '2.2.7'
        jacksonVersion = '2.9.9'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath "org.jlleitschuh.gradle:ktlint-gradle:8.0.0"
    }
}

plugins {
    id "com.jfrog.bintray" version "1.8.4"
}
apply plugin: 'maven-publish'
apply plugin: 'kotlin'
apply plugin: 'idea'

group = 'dev.bothin.smooth-mqtt'
version = '0.0.6'

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    testIntegration {
        kotlin.srcDir 'src/test-integration/kotlin'
        resources.srcDir 'src/test-integration/resources'

        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.testIntegration.kotlin.srcDirs
        testSourceDirs += project.sourceSets.testIntegration.resources.srcDirs
    }
}

test {
    useJUnitPlatform()
}

task testIntegration(type: Test) {
    useJUnitPlatform()
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.testIntegration.output.classesDirs
    classpath = sourceSets.testIntegration.runtimeClasspath
    mustRunAfter test
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact project.sourcesJar {
                classifier "sources"
            }
            groupId 'dev.bothin.smooth-mqtt'
            artifactId 'smooth-mqtt'
            version '0.0.6'
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['MyPublication']
    pkg {
        repo = 'smooth-mqtt'
        name = 'smooth-mqtt'
        userOrg = user
        licenses = ['MIT']
        vcsUrl = 'https://github.com/hemma/smooth-mqtt.git'
        labels = ['mqtt', 'kotlin']
        publicDownloadNumbers = true
        version {
            name = '0.0.6'
            desc = 'Mqtt library'
            vcsTag = '0.0.6'
        }
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestIntegrationKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    api 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.1'
    api 'org.kodein.di:kodein-di-generic-jvm:6.3.3'

    implementation 'org.reflections:reflections:0.9.11'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names:${jacksonVersion}"

    implementation "io.github.microutils:kotlin-logging:1.6.24"
    implementation 'cglib:cglib:3.3.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0-RC2'

    testCompile "org.testcontainers:testcontainers:1.11.3"
    testCompile "org.testcontainers:toxiproxy:1.11.3"
    testCompile "org.testcontainers:junit-jupiter:1.11.3"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation "io.mockk:mockk:1.8.13"
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'org.awaitility:awaitility:3.1.6'
    testImplementation 'org.awaitility:awaitility-kotlin:3.1.6'
}
